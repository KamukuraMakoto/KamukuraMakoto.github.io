<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[菜鸟的JS学习笔记(二):原生js实现简单轮播图]]></title>
    <url>%2F2017%2F12%2F04%2Fblog3%2F</url>
    <content type="text"><![CDATA[效果如下图: 实现代码 index.html12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt; &lt;title&gt;轮播图&lt;/title&gt; &lt;link rel = "stylesheet" href = "./index.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="all"&gt; &lt;div class="vector"&gt; &lt;div class="img_vector"&gt; &lt;ul&gt; &lt;li&gt;这是第一屏&lt;/li&gt; &lt;li&gt;这是第二屏&lt;/li&gt; &lt;li&gt;这是第三屏&lt;/li&gt; &lt;/ul&gt; &lt;span class = "lt"&gt;&amp;lt;&lt;/span&gt; &lt;span class="gt"&gt;&amp;gt;&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class = "btn_div"&gt; &lt;span class="btn_one btn btn_check"&gt;&lt;/span&gt; &lt;span class="btn_two btn"&gt;&lt;/span&gt; &lt;span class="btn_three btn"&gt;&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;script type="text/javascript" src="./js/autoflash.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; index.css1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980*&#123; margin: 0px; padding: 0px;&#125;.all&#123; width: 1350px; height: 22px; margin: 0 auto; &#125;.vector&#123; width: 1350px; height: 220px; &#125;.img_vector&#123; width: 450px; height: 220px; overflow: hidden;&#125;ul&#123; width:1350px; height: 220px; &#125;li&#123; display: block; float: left; width: 450px; height: 220px; background: greenyellow; &#125; span&#123; display: block; width: 12px; height: 50px; background: #ccc; padding-top: 20px; padding-left: 3px; position: absolute; z-index: 1;&#125;span:hover&#123; cursor: pointer;&#125;.lt&#123; margin-top:-140px; &#125;.gt&#123; margin-left:435px; margin-top:-140px;&#125;.lt,.gt&#123; display: none;&#125;.btn_div&#123; margin-left: 160px;&#125;.btn&#123; width:15px; height: 15px; border-radius: 100%; background: #ccc; padding-top: 0px; padding-left: 0px; margin-top: -30px; &#125;.btn_two&#123; margin-left: 40px;&#125;.btn_three&#123; margin-left: 80px;&#125;.btn_check&#123; background: yellow;&#125; index.js123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081window.onload = function()&#123; var lt = document.getElementsByClassName("lt")[0]; var gt = document.getElementsByClassName("gt")[0]; var vector = document.getElementsByTagName("ul")[0]; var vector_div = document.getElementsByClassName("img_vector")[0]; var btnCheck_div = document.getElementsByClassName("btn_div")[0]; var btn = btnCheck_div.getElementsByTagName('span'); var class_name_str_one = 'btn_one btn'; var class_name_str_two = 'btn_two btn'; var class_name_str_three = 'btn_three btn'; var index = 0; var auto_setvar = function()&#123; var auto_flash = setInterval(function()&#123; if(index == 2)&#123; vector.style.marginLeft = 0 + 'px'; index = 0; &#125;else&#123; index++; vector.style.marginLeft = index * -450 + 'px'; &#125; if(index == 0)&#123; btn[2].className = class_name_str_three; &#125;else&#123; if(index - 1 == 0)&#123; btn[index - 1].className = class_name_str_one; &#125;else&#123; btn[index - 1].className = class_name_str_two; &#125; &#125; btn[index].className += ' ' + 'btn_check'; //index ++; &#125;,1500); vector_div.onmouseover = function()&#123; clearInterval(auto_flash); lt.style.display = 'block'; gt.style.display = 'block'; &#125;; vector_div.onmouseout = function()&#123; auto_setvar(); lt.style.display = 'none'; gt.style.display = 'none'; &#125;; lt.onclick = function()&#123; //clearInterval(auto_flash); if(index == 0)&#123; vector.style.marginLeft = -900 + 'px'; btn[index].className = class_name_str_one; index = 2; &#125;else&#123; index --; vector.style.marginLeft = index * -450 + 'px'; if(index == 1)&#123; btn[index + 1].className = class_name_str_three; &#125;else&#123; btn[index + 1].className = class_name_str_two; &#125; &#125; btn[index].className += ' ' + 'btn_check'; &#125;; gt.onclick = function()&#123; //clearInterval(auto_flash); if(index == 2 || index == 3)&#123; vector.style.marginLeft = 0 + 'px'; btn[index].className = class_name_str_three; index = 0; &#125;else&#123; index++; vector.style.marginLeft = index * -450 + 'px'; if(index == 1)&#123; btn[index - 1].className = class_name_str_one; &#125;else&#123; btn[index - 1].className = class_name_str_two; &#125; &#125; btn[index].className += ' ' + 'btn_check'; &#125;; &#125;; auto_setvar(); &#125;;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>菜鸟学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[菜鸟的JS学习笔记(一):js如何判断哪个元素触发了点击事件]]></title>
    <url>%2F2017%2F11%2F10%2Fblog2%2F</url>
    <content type="text"><![CDATA[EventTarget.addEventListenerEventTarget.addEventListener()方法将指定的监听器注册到 EventTarget 上，当该对象触发指定的事件时，指定的回调函数就会被执行。事件目标可以是一个文档上的元素 Document本身，或者任何其他支持事件的对象 (比如 XMLHttpRequest)。 语法target.addEventListener(type, listener); type表示监听事件类型的字符串。Listener当所监听的事件类型触发时，会接收到一个事件通知（实现了 Event 接口的对象）对象。listener 必须是一个实现了 EventListener 接口的对象，或者是一个函数 实现代码 index.html123456789101112131415161718192021&lt;!DOCTYPE html&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel = "stylesheet" href = "./index.css"&gt;&lt;/head&gt;&lt;body&gt;&lt;div style="width:500px;height:500px;background-color: #1A68A2" id="container"&gt; &lt;div class="innerDiv" data-index="1"&gt;1&lt;/div&gt; &lt;div class="innerDiv" data-index="2"&gt;2&lt;/div&gt; &lt;div class="innerDiv" data-index="3"&gt;3&lt;/div&gt; &lt;div class="innerDiv" data-index="4"&gt;4&lt;/div&gt; &lt;div class="innerDiv" data-index="5"&gt;5&lt;/div&gt; &lt;div class="innerDiv" data-index="6"&gt;6&lt;/div&gt; &lt;div class="innerDiv" data-index="7"&gt;7&lt;/div&gt; &lt;div class="innerDiv" data-index="8"&gt;8&lt;/div&gt;&lt;/div&gt;&lt;script type="text/javascript" src="./index.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; index.css12345.innerDiv&#123; border:1px solid #cccccc; width:500px; height:50px &#125; index.js1234567function processInnderDiv(domDiv)&#123; console.log('div[data-index=%s] click',domDiv.getAttribute("data-index"));&#125;document.getElementById("container").addEventListener("click",function(event)&#123; processInnderDiv(event.target);&#125;,false);]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>菜鸟学习笔记</tag>
      </tags>
  </entry>
</search>
